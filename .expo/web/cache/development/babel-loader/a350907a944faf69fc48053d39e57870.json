{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\MiscWorkSpace\\\\ReactNative\\\\my-app\\\\screens\\\\NoInternet.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport { Header } from \"react-native/Libraries/NewAppScreen\";\nexport default function NoInternet(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isConnected = _useState2[0],\n      setisConnected = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showError = _useState4[0],\n      setshowError = _useState4[1];\n\n  var heading = props.heading,\n      content = props.content,\n      buttonLabel = props.buttonLabel,\n      errorText = props.errorText,\n      themeBg = props.themeBg,\n      themeBgBottom = props.themeBgBottom,\n      containerStyle = props.containerStyle;\n  useEffect(function () {\n    var unsubscribe = NetInfo.addEventListener(function (state) {\n      checkStatus(state.isConnected);\n    });\n    return function cleanup() {\n      unsubscribe();\n    };\n  });\n\n  var handleCheckNet = function handleCheckNet() {\n    setshowError(false);\n    NetInfo.fetch().then(function (state) {\n      checkStatus(state.isConnected);\n\n      if (!isConnected) {\n        setshowError(true);\n        setTimeout(function () {\n          setshowError(false);\n        }, 3000);\n      }\n    });\n  };\n\n  var checkStatus = function checkStatus(status) {\n    if (status == true) {\n      setisConnected(false);\n    } else {\n      setisConnected(false);\n    }\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, isConnected ? props.MainComponent : React.createElement(View, {\n    style: [{\n      flex: 1\n    }, containerStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, showError && React.createElement(View, {\n    style: {\n      backgroundColor: \"red\",\n      padding: 2,\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, errorText)), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, heading), React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, content), React.createElement(TouchableOpacity, {\n    disabled: showError,\n    onPress: handleCheckNet,\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: 120,\n      backgroundColor: \"yellow\",\n      width: \"100%\",\n      borderRadius: 8,\n      height: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: [{\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: 120,\n      backgroundColor: \"yellow\",\n      width: \"100%\",\n      borderRadius: 8,\n      height: 40,\n      position: \"absolute\",\n      zIndex: 0\n    }, themeBg],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: [{\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"red\",\n      borderRadius: 8,\n      position: \"absolute\",\n      zIndex: -1,\n      bottom: -2.5,\n      top: 1.5,\n      right: 0,\n      left: -2\n    }, themeBgBottom],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, buttonLabel))));\n}","map":{"version":3,"sources":["D:/MiscWorkSpace/ReactNative/my-app/screens/NoInternet.tsx"],"names":["React","useEffect","useState","NetInfo","Background","Logo","Header","NoInternet","props","isConnected","setisConnected","showError","setshowError","heading","content","buttonLabel","errorText","themeBg","themeBgBottom","containerStyle","unsubscribe","addEventListener","state","checkStatus","cleanup","handleCheckNet","fetch","then","setTimeout","status","MainComponent","flex","backgroundColor","padding","alignItems","position","width","color","fontSize","justifyContent","maxWidth","borderRadius","height","zIndex","bottom","top","right","left"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport { Text, TouchableOpacity, View } from \"react-native\";\r\nimport Background from \"../components/Background\";\r\nimport Logo from \"../components/Logo\";\r\nimport { Header } from \"react-native/Libraries/NewAppScreen\";\r\n\r\nexport default function NoInternet(props: any) {\r\n  const [isConnected, setisConnected] = useState(false);\r\n  const [showError, setshowError] = useState(false);\r\n  const {\r\n    heading,\r\n    content,\r\n    buttonLabel,\r\n    errorText,\r\n    themeBg,\r\n    themeBgBottom,\r\n    containerStyle,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = NetInfo.addEventListener((state) => {\r\n      checkStatus(state.isConnected);\r\n    });\r\n\r\n    return function cleanup() {\r\n      unsubscribe();\r\n    };\r\n  });\r\n\r\n  const handleCheckNet = () => {\r\n    setshowError(false);\r\n    NetInfo.fetch().then((state) => {\r\n      checkStatus(state.isConnected);\r\n      if (!isConnected) {\r\n        setshowError(true);\r\n        setTimeout(function () {\r\n          setshowError(false);\r\n        }, 3000);\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkStatus = (status: any) => {\r\n    if (status == true) {\r\n      setisConnected(false);\r\n    } else {\r\n      setisConnected(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      {isConnected ? (\r\n        props.MainComponent\r\n      ) : (\r\n        <View style={[{ flex: 1 }, containerStyle]}>\r\n          {showError && (\r\n            <View\r\n              style={{\r\n                backgroundColor: \"red\",\r\n                padding: 2,\r\n                alignItems: \"center\",\r\n                position: \"absolute\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <Text style={{ color: \"white\", fontSize: 12 }}>{errorText}</Text>\r\n            </View>\r\n          )}\r\n          <Logo />\r\n          <Header>{heading}</Header>\r\n          <Paragraph>{content}</Paragraph>\r\n          <TouchableOpacity\r\n            disabled={showError}\r\n            onPress={handleCheckNet}\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              maxWidth: 120,\r\n              backgroundColor: \"yellow\",\r\n              width: \"100%\",\r\n              borderRadius: 8,\r\n              height: 40,\r\n            }}\r\n          >\r\n            <View\r\n              style={[\r\n                {\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  maxWidth: 120,\r\n                  backgroundColor: \"yellow\",\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: 40,\r\n                  position: \"absolute\",\r\n                  zIndex: 0,\r\n                },\r\n                themeBg,\r\n              ]}\r\n            />\r\n            <View\r\n              style={[\r\n                {\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  backgroundColor: \"red\",\r\n                  borderRadius: 8,\r\n                  position: \"absolute\",\r\n                  zIndex: -1,\r\n                  bottom: -2.5,\r\n                  top: 1.5,\r\n                  right: 0,\r\n                  left: -2,\r\n                },\r\n                themeBgBottom,\r\n              ]}\r\n            />\r\n            <Text>{buttonLabel}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </Background>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}