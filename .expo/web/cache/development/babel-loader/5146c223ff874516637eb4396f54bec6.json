{"ast":null,"code":"export function contains(_ref) {\n  var outside = _ref.outside,\n      inside = _ref.inside;\n  var outsideMaxX = outside.minX + outside.width;\n  var insideMaxX = inside.minX + inside.width;\n  var outsideMaxY = outside.minY + outside.height;\n  var insideMaxY = inside.minY + inside.height;\n\n  if (inside.minX < outside.minX) {\n    return false;\n  }\n\n  if (insideMaxX > outsideMaxX) {\n    return false;\n  }\n\n  if (inside.minY < outside.minY) {\n    return false;\n  }\n\n  if (insideMaxY > outsideMaxY) {\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Umar/Music/my-app/navigation/types.tsx"],"names":["contains","outside","inside","outsideMaxX","minX","width","insideMaxX","outsideMaxY","minY","height","insideMaxY"],"mappings":"AAuCA,OAAO,SAASA,QAAT,OAAiD;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AACtD,MAAMC,WAAW,GAAGF,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACI,KAA3C;AACA,MAAMC,UAAU,GAAGJ,MAAM,CAACE,IAAP,GAAcF,MAAM,CAACG,KAAxC;AAEA,MAAME,WAAW,GAAGN,OAAO,CAACO,IAAR,GAAeP,OAAO,CAACQ,MAA3C;AACA,MAAMC,UAAU,GAAGR,MAAM,CAACM,IAAP,GAAcN,MAAM,CAACO,MAAxC;;AAEA,MAAIP,MAAM,CAACE,IAAP,GAAcH,OAAO,CAACG,IAA1B,EAAgC;AAC9B,WAAO,KAAP;AACD;;AACD,MAAIE,UAAU,GAAGH,WAAjB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AACD,MAAID,MAAM,CAACM,IAAP,GAAcP,OAAO,CAACO,IAA1B,EAAgC;AAC9B,WAAO,KAAP;AACD;;AACD,MAAIE,UAAU,GAAGH,WAAjB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["export type Navigation = {\n  navigate: (scene: string) => void;\n  openDrawer: () => void;\n  goBack: () => void;\n};\n\nexport interface FaceDetection {\n  rollAngle: number;\n  yawAngle: number;\n  smilingProbability: number;\n  leftEyeOpenProbability: number;\n  rightEyeOpenProbability: number;\n  bounds: {\n    origin: {\n      x: number;\n      y: number;\n    };\n    size: {\n      width: number;\n      height: number;\n    };\n  };\n}\n\nexport interface Rectangle {\n  minX: number;\n  minY: number;\n  width: number;\n  height: number;\n}\n\ninterface Contains {\n  outside: Rectangle;\n  inside: Rectangle;\n}\n\n/**\n * @returns `true` if `outside` rectangle contains the `inside` rectangle.\n * */\nexport function contains({ outside, inside }: Contains) {\n  const outsideMaxX = outside.minX + outside.width;\n  const insideMaxX = inside.minX + inside.width;\n\n  const outsideMaxY = outside.minY + outside.height;\n  const insideMaxY = inside.minY + inside.height;\n\n  if (inside.minX < outside.minX) {\n    return false;\n  }\n  if (insideMaxX > outsideMaxX) {\n    return false;\n  }\n  if (inside.minY < outside.minY) {\n    return false;\n  }\n  if (insideMaxY > outsideMaxY) {\n    return false;\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}