{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\MiscWorkSpace\\\\ReactNative\\\\my-app\\\\screens\\\\no-internet.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function NoInternet(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      connection_Status = _useState2[0],\n      setconnection_Status = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showError = _useState4[0],\n      setshowError = _useState4[1];\n\n  var heading = props.heading,\n      content = props.content,\n      buttonLabel = props.buttonLabel,\n      errorText = props.errorText,\n      themeBg = props.themeBg,\n      themeBgBottom = props.themeBgBottom,\n      containerStyle = props.containerStyle,\n      textStyle = props.textStyle;\n  useEffect(function () {\n    NetInfo.addEventListener(function (state) {\n      if (state.isConnected == true) {\n        setconnection_Status(\"Offline\");\n      } else {\n        setconnection_Status(\"Offline\");\n      }\n    });\n  });\n\n  var handleCheckNet = function handleCheckNet() {\n    setshowError(true);\n    setTimeout(function () {\n      setconnection_Status(\"Online\");\n      setshowError(false);\n    }, 3000);\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, connection_Status === \"Online\" ? props.MainComponent : React.createElement(View, {\n    style: [{\n      flex: 1,\n      backgroundColor: \"#ccc\"\n    }, containerStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, showError && React.createElement(View, {\n    style: {\n      backgroundColor: \"red\",\n      padding: 2,\n      alignItems: \"center\",\n      position: \"absolute\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, errorText)), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingHorizontal: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [{\n      color: \"white\",\n      fontSize: 28,\n      marginBottom: 10,\n      textAlign: \"center\"\n    }, textStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, heading), React.createElement(Text, {\n    style: [{\n      color: \"white\",\n      fontSize: 18,\n      textAlign: \"center\",\n      marginBottom: 20\n    }, textStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, content), React.createElement(TouchableOpacity, {\n    disabled: showError,\n    onPress: handleCheckNet,\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: 120,\n      backgroundColor: \"yellow\",\n      width: \"100%\",\n      borderRadius: 8,\n      height: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: [{\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: 120,\n      backgroundColor: \"yellow\",\n      width: \"100%\",\n      borderRadius: 8,\n      height: 40,\n      position: \"absolute\",\n      zIndex: 0\n    }, themeBg],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: [{\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"red\",\n      borderRadius: 8,\n      position: \"absolute\",\n      zIndex: -1,\n      bottom: -2.5,\n      top: 1.5,\n      right: 0,\n      left: -2\n    }, themeBgBottom],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, buttonLabel)))));\n}","map":{"version":3,"sources":["D:/MiscWorkSpace/ReactNative/my-app/screens/no-internet.tsx"],"names":["React","useEffect","useState","NetInfo","NoInternet","props","connection_Status","setconnection_Status","showError","setshowError","heading","content","buttonLabel","errorText","themeBg","themeBgBottom","containerStyle","textStyle","addEventListener","state","isConnected","handleCheckNet","setTimeout","height","MainComponent","flex","backgroundColor","padding","alignItems","position","width","color","fontSize","justifyContent","paddingHorizontal","marginBottom","textAlign","maxWidth","borderRadius","zIndex","bottom","top","right","left"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport { Text, TouchableOpacity, View } from \"react-native\";\r\n\r\nexport default function NoInternet(props: any) {\r\n  const [connection_Status, setconnection_Status] = useState(\"\");\r\n  const [showError, setshowError] = useState(false);\r\n  const {\r\n    heading,\r\n    content,\r\n    buttonLabel,\r\n    errorText,\r\n    themeBg,\r\n    themeBgBottom,\r\n    containerStyle,\r\n    textStyle,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    NetInfo.addEventListener((state) => {\r\n      if (state.isConnected == true) {\r\n        setconnection_Status(\"Offline\");\r\n      } else {\r\n        setconnection_Status(\"Offline\");\r\n      }\r\n    });\r\n  });\r\n\r\n  const handleCheckNet = () => {\r\n    setshowError(true);\r\n    setTimeout(() => {\r\n      setconnection_Status(\"Online\");\r\n      setshowError(false);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <View style={{ height: \"100%\" }}>\r\n      {connection_Status === \"Online\" ? (\r\n        props.MainComponent\r\n      ) : (\r\n        <View style={[{ flex: 1, backgroundColor: \"#ccc\" }, containerStyle]}>\r\n          {showError && (\r\n            <View\r\n              style={{\r\n                backgroundColor: \"red\",\r\n                padding: 2,\r\n                alignItems: \"center\",\r\n                position: \"absolute\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <Text style={{ color: \"white\", fontSize: 12 }}>{errorText}</Text>\r\n            </View>\r\n          )}\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingHorizontal: 20,\r\n            }}\r\n          >\r\n            <Text\r\n              style={[\r\n                {\r\n                  color: \"white\",\r\n                  fontSize: 28,\r\n                  marginBottom: 10,\r\n                  textAlign: \"center\",\r\n                },\r\n                textStyle,\r\n              ]}\r\n            >\r\n              {heading}\r\n            </Text>\r\n            <Text\r\n              style={[\r\n                {\r\n                  color: \"white\",\r\n                  fontSize: 18,\r\n                  textAlign: \"center\",\r\n                  marginBottom: 20,\r\n                },\r\n                textStyle,\r\n              ]}\r\n            >\r\n              {content}\r\n            </Text>\r\n            <TouchableOpacity\r\n              disabled={showError}\r\n              onPress={handleCheckNet}\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                maxWidth: 120,\r\n                backgroundColor: \"yellow\",\r\n                width: \"100%\",\r\n                borderRadius: 8,\r\n                height: 40,\r\n              }}\r\n            >\r\n              <View\r\n                style={[\r\n                  {\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    maxWidth: 120,\r\n                    backgroundColor: \"yellow\",\r\n                    width: \"100%\",\r\n                    borderRadius: 8,\r\n                    height: 40,\r\n                    position: \"absolute\",\r\n                    zIndex: 0,\r\n                  },\r\n                  themeBg,\r\n                ]}\r\n              />\r\n              <View\r\n                style={[\r\n                  {\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: \"red\",\r\n                    borderRadius: 8,\r\n                    position: \"absolute\",\r\n                    zIndex: -1,\r\n                    bottom: -2.5,\r\n                    top: 1.5,\r\n                    right: 0,\r\n                    left: -2,\r\n                  },\r\n                  themeBgBottom,\r\n                ]}\r\n              />\r\n              <Text>{buttonLabel}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}