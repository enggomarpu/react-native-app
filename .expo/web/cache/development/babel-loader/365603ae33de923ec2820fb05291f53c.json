{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Umar\\\\Music\\\\my-app\\\\screens\\\\NoInternet.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Snackbar } from \"react-native-paper\";\nimport { theme } from \"../core/theme\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\nexport default function NoInternet(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isConnected = _useState2[0],\n      setisConnected = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isShow = _useState4[0],\n      setisShow = _useState4[1];\n\n  var heading = props.heading,\n      content = props.content,\n      buttonLabel = props.buttonLabel,\n      errorText = props.errorText;\n  useEffect(function () {\n    var unsubscribe = NetInfo.addEventListener(function (state) {\n      checkStatus(state.isConnected);\n    });\n    return function cleanup() {\n      unsubscribe();\n    };\n  });\n\n  var handleCheckNet = function handleCheckNet() {\n    NetInfo.fetch().then(function (state) {\n      checkStatus(state.isConnected);\n\n      if (!isConnected) {\n        setisShow(true);\n      }\n    });\n  };\n\n  var checkStatus = function checkStatus(status) {\n    if (status == true) {\n      setisConnected(status);\n    } else {\n      setisConnected(false);\n    }\n  };\n\n  return isConnected ? props.MainComponent : React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Snackbar, {\n    visible: isShow,\n    onDismiss: function onDismiss() {\n      return setisShow(false);\n    },\n    duration: 3000,\n    style: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, errorText), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, heading), React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, content), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return handleCheckNet();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, buttonLabel));\n}\nvar styles = StyleSheet.create({\n  background: {\n    backgroundColor: theme.colors.error,\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Umar/Music/my-app/screens/NoInternet.tsx"],"names":["React","useEffect","useState","Snackbar","theme","NetInfo","Background","Logo","Header","Paragraph","Button","NoInternet","props","isConnected","setisConnected","isShow","setisShow","heading","content","buttonLabel","errorText","unsubscribe","addEventListener","state","checkStatus","cleanup","handleCheckNet","fetch","then","status","MainComponent","styles","background","StyleSheet","create","backgroundColor","colors","error","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Snackbar } from \"react-native-paper\";\r\nimport { theme } from \"../core/theme\";\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\nimport Background from \"../components/Background\";\r\nimport Logo from \"../components/Logo\";\r\nimport Header from \"../components/Header\";\r\nimport Paragraph from \"../components/Paragraph\";\r\nimport Button from \"../components/Button\";\r\n\r\nexport default function NoInternet(props: any) {\r\n  const [isConnected, setisConnected] = useState(false);\r\n  const [isShow, setisShow] = useState(false);\r\n  const { heading, content, buttonLabel, errorText } = props;\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = NetInfo.addEventListener((state) => {\r\n      checkStatus(state.isConnected);\r\n    });\r\n\r\n    return function cleanup() {\r\n      unsubscribe();\r\n    };\r\n  });\r\n\r\n  const handleCheckNet = () => {\r\n    NetInfo.fetch().then((state) => {\r\n      checkStatus(state.isConnected);\r\n      if (!isConnected) {\r\n        setisShow(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkStatus = (status: any) => {\r\n    if (status == true) {\r\n      setisConnected(status);\r\n    } else {\r\n      setisConnected(false);\r\n    }\r\n  };\r\n\r\n  return isConnected ? (\r\n    props.MainComponent\r\n  ) : (\r\n    <Background>\r\n      <Snackbar\r\n        visible={isShow}\r\n        onDismiss={() => setisShow(false)}\r\n        duration={3000}\r\n        style={styles.background}\r\n      >\r\n        {errorText}\r\n      </Snackbar>\r\n      <Logo />\r\n      <Header>{heading}</Header>\r\n      <Paragraph>{content}</Paragraph>\r\n      <Button mode=\"contained\" onPress={() => handleCheckNet()}>\r\n        {buttonLabel}\r\n      </Button>\r\n    </Background>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    backgroundColor: theme.colors.error,\r\n    color: \"#fff\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}