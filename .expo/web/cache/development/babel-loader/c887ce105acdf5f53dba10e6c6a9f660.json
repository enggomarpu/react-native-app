{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Umar\\\\Music\\\\my-app\\\\screens\\\\ForgotPassword.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { emailValidator } from \"../core/utils\";\nimport { theme } from \"../core/theme\";\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport Button from \"../components/Button\";\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _onSendPressed = function _onSendPressed() {\n    var emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      return;\n    }\n\n    navigation.navigate(\"Login\");\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack() {\n      return navigation.navigate(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Restore Password\"), React.createElement(TextInput, {\n    label: \"E-mail address\",\n    returnKeyType: \"done\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: _onSendPressed,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Send Reset Instructions\"), React.createElement(TouchableOpacity, {\n    style: styles.back,\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"\\u2190 Back to login\")));\n};\n\nvar styles = StyleSheet.create({\n  back: {\n    width: \"100%\",\n    marginTop: 12\n  },\n  button: {\n    marginTop: 12\n  },\n  label: {\n    color: theme.colors.secondary,\n    width: \"100%\"\n  }\n});\nexport default memo(ForgotPassword);","map":{"version":3,"sources":["C:/Users/Umar/Music/my-app/screens/ForgotPassword.tsx"],"names":["React","memo","useState","emailValidator","theme","Background","BackButton","Logo","Header","TextInput","Button","ForgotPassword","navigation","value","error","email","setEmail","_onSendPressed","emailError","navigate","text","styles","button","back","label","StyleSheet","create","width","marginTop","color","colors","secondary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from \"react\";\nimport { Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { emailValidator } from \"../core/utils\";\nimport { Navigation } from \"../navigation/types\";\nimport { theme } from \"../core/theme\";\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport Button from \"../components/Button\";\n\ntype Props = {\n  navigation: Navigation;\n};\n\nconst ForgotPassword = ({ navigation }: Props) => {\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n\n  const _onSendPressed = () => {\n    const emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail({ ...email, error: emailError });\n      return;\n    }\n\n    navigation.navigate(\"Login\");\n  };\n\n  return (\n    <Background>\n      <BackButton goBack={() => navigation.navigate(\"Login\")} />\n\n      <Logo />\n\n      <Header>Restore Password</Header>\n\n      <TextInput\n        label=\"E-mail address\"\n        returnKeyType=\"done\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <Button mode=\"contained\" onPress={_onSendPressed} style={styles.button}>\n        Send Reset Instructions\n      </Button>\n\n      <TouchableOpacity\n        style={styles.back}\n        onPress={() => navigation.navigate(\"Login\")}\n      >\n        <Text style={styles.label}>‚Üê Back to login</Text>\n      </TouchableOpacity>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  back: {\n    width: \"100%\",\n    marginTop: 12,\n  },\n  button: {\n    marginTop: 12,\n  },\n  label: {\n    color: theme.colors.secondary,\n    width: \"100%\",\n  },\n});\n\nexport default memo(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}