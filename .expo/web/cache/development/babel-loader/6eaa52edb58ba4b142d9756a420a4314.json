{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\MiscWorkSpace\\\\ReactNative\\\\my-app\\\\node_modules\\\\react-native-no-internet-screen\\\\src\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport PropTypes from 'prop-types';\nimport NoInternetScreen from \"./NoInternet\";\nexport var NoInternet = function (_Component) {\n  _inherits(NoInternet, _Component);\n\n  var _super = _createSuper(NoInternet);\n\n  function NoInternet(props) {\n    var _this;\n\n    _classCallCheck(this, NoInternet);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      connection_Status: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(NoInternet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var unsubscribe = NetInfo.addEventListener(function (state) {\n        if (state.isConnected == true) {\n          _this2.setState({\n            connection_Status: \"Online\"\n          });\n        } else {\n          _this2.setState({\n            connection_Status: \"Offline\"\n          });\n        }\n      });\n      unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, this.state.connection_Status === \"Online\" ? this.props.MainComponent : React.createElement(NoInternetScreen, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 89\n        }\n      })));\n    }\n  }]);\n\n  return NoInternet;\n}(Component);\nNoInternet.propTypes = {\n  MainComponent: PropTypes.node,\n  heading: PropTypes.string,\n  content: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  errorText: PropTypes.string\n};\nNoInternet.defaultProps = {\n  MainComponent: React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }\n  }, \"Your MainComponent props Missing.\")),\n  heading: \"Oops! There is no Internet Connection\",\n  content: \"We're having a little difficulty in connecting to the Internet. Please check your connection and try again.\",\n  buttonLabel: \"Try Again\",\n  errorText: \"We still can't connect - please try again.\",\n  themeBg: {\n    backgroundColor: \"yellow\"\n  },\n  themeBgBottom: {\n    backgroundColor: \"red\"\n  }\n};\nexport default NoInternet;","map":{"version":3,"sources":["D:/MiscWorkSpace/ReactNative/my-app/node_modules/react-native-no-internet-screen/src/index.js"],"names":["React","Component","NetInfo","PropTypes","NoInternetScreen","NoInternet","props","state","connection_Status","unsubscribe","addEventListener","isConnected","setState","height","MainComponent","propTypes","node","heading","string","content","buttonLabel","errorText","defaultProps","themeBg","backgroundColor","themeBgBottom"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP;AAEA,WAAaC,UAAb;AAAA;;AAAA;;AACI,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,iBAAiB,EAAG;AADb,KAAX;AAFc;AAKjB;;AANL;AAAA;AAAA,WAOA,6BAAmB;AAAA;;AACf,UAAMC,WAAW,GAAGP,OAAO,CAACQ,gBAAR,CAAyB,UAAAH,KAAK,EAAI;AAClD,YAAGA,KAAK,CAACI,WAAN,IAAqB,IAAxB,EAA6B;AACzB,UAAA,MAAI,CAACC,QAAL,CAAc;AAACJ,YAAAA,iBAAiB,EAAG;AAArB,WAAd;AACH,SAFD,MAGI;AACA,UAAA,MAAI,CAACI,QAAL,CAAc;AAACJ,YAAAA,iBAAiB,EAAG;AAArB,WAAd;AACH;AACJ,OAPmB,CAApB;AAQAC,MAAAA,WAAW;AACd;AAjBD;AAAA;AAAA,WAkBA,kBAAS;AACL,aACQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,MAAM,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,KAAL,CAAWC,iBAAX,KAAiC,QAAjC,GAA4C,KAAKF,KAAL,CAAWQ,aAAvD,GAAuE,oBAAC,gBAAD,eAAsB,KAAKR,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAD5E,CADR;AAKC;AAxBL;;AAAA;AAAA,EAAgCL,SAAhC;AA2BAI,UAAU,CAACU,SAAX,GAAuB;AACnBD,EAAAA,aAAa,EAAEX,SAAS,CAACa,IADN;AAEnBC,EAAAA,OAAO,EAAEd,SAAS,CAACe,MAFA;AAGnBC,EAAAA,OAAO,EAAEhB,SAAS,CAACe,MAHA;AAInBE,EAAAA,WAAW,EAAEjB,SAAS,CAACe,MAJJ;AAKnBG,EAAAA,SAAS,EAAElB,SAAS,CAACe;AALF,CAAvB;AAOAb,UAAU,CAACiB,YAAX,GAA0B;AACtBR,EAAAA,aAAa,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAN,CADO;AAEtBG,EAAAA,OAAO,EAAE,uCAFa;AAGtBE,EAAAA,OAAO,EAAE,6GAHa;AAItBC,EAAAA,WAAW,EAAE,WAJS;AAKtBC,EAAAA,SAAS,EAAE,4CALW;AAMtBE,EAAAA,OAAO,EAAE;AAACC,IAAAA,eAAe,EAAE;AAAlB,GANa;AAOtBC,EAAAA,aAAa,EAAE;AAACD,IAAAA,eAAe,EAAE;AAAlB;AAPO,CAA1B;AAUA,eAAenB,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View } from 'react-native';\nimport NetInfo from \"@react-native-community/netinfo\";\nimport PropTypes from 'prop-types';\nimport NoInternetScreen from './NoInternet';\n\nexport class NoInternet extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            connection_Status : \"\"\n        }\n    }\ncomponentDidMount(){\n    const unsubscribe = NetInfo.addEventListener(state => {\n        if(state.isConnected == true){\n            this.setState({connection_Status : \"Online\"})\n        }\n        else{\n            this.setState({connection_Status : \"Offline\"})\n        }\n    });\n    unsubscribe();\n}\nrender() {\n    return (\n            <View style={{ height: '100%' }}>\n                {this.state.connection_Status === \"Online\" ? this.props.MainComponent : <NoInternetScreen {...this.props} />}\n            </View>\n        )\n    }\n}\n\nNoInternet.propTypes = {\n    MainComponent: PropTypes.node,\n    heading: PropTypes.string,\n    content: PropTypes.string,\n    buttonLabel: PropTypes.string,\n    errorText: PropTypes.string\n}\nNoInternet.defaultProps = {\n    MainComponent: <View><Text>Your MainComponent props Missing.</Text></View>,\n    heading: \"Oops! There is no Internet Connection\",\n    content: \"We're having a little difficulty in connecting to the Internet. Please check your connection and try again.\",\n    buttonLabel: \"Try Again\",\n    errorText: \"We still can't connect - please try again.\",\n    themeBg: {backgroundColor: \"yellow\"},\n    themeBgBottom: {backgroundColor: \"red\"}\n};\n\nexport default NoInternet;"]},"metadata":{},"sourceType":"module"}